process ISO = { // Here we assume that input is already in reco format.
	untracked PSet opt = {
	untracked bool makeTriggerResults = true  # default is false
        vstring listOfTriggers = {"*" } # must be given if makeTriggerResults is true
        		}

	untracked PSet maxEvents = {untracked int32 input = 10}

  	source = PoolSource {
    	untracked vstring fileNames = {
#'/store/RelVal/2007/6/30/RelVal-RelVal151QCD_pt80_120-1183231184/0000/40B43AAC-6527-DC11-B866-000E0C3E6D5B.root'
'/store/RelVal/2007/6/30/RelVal-RelVal151QCD_pt80_120-1183231184/0000/9E424EC0-6527-DC11-A39F-000E0C3F091B.root'
#'/store/RelVal/2007/6/30/RelVal-RelVal151QCD_pt80_120-1183231184/0000/B84D5C99-7C27-DC11-A18A-0019BB3F7392.root'
 		 }
	}

# Initialize magnetic field
  include "MagneticField/Engine/data/volumeBasedMagneticField.cfi"
  include "Geometry/CMSCommonData/data/cmsIdealGeometryXML.cfi"
  include "Geometry/CaloEventSetup/data/CaloGeometry.cff"

  include "Calibration/HcalAlCaRecoProducers/data/ALCARECOHcalCalIsoTrk.cff"
#  include "Calibration/HcalAlCaRecoProducers/data/alcastreamHcalIsotrkOutput.cff"
        
include "Calibration/HcalCalibAlgos/data/isoTrkCalib.cfi"
replace isoTrkCalib.outputFileName="test.root"

path p = { seqALCARECOHcalCalIsoTrk, isoTrkCalib }

    untracked PSet options = {
    untracked bool wantSummary = true
    untracked bool makeTriggerResults = true
    vstring listOfTriggers = { "p" }
   }

   module printer = AsciiOutputModule {}

module outputEvents = PoolOutputModule
   {
        untracked vstring outputCommands =
        {
        "drop *",

        "keep recoTracks_ctfWithMaterialTracks_*_*",
        "keep *_ecalRecHit_*_*",
        "keep *_hbhereco_*_*",
        "keep *_horeco_*_*",
	"keep *_IsoProd_*_*"
  
	}
        untracked PSet SelectEvents = {
                vstring SelectEvents = {"p"}
        }

      untracked string fileName = "CaloRecHits_4.root"
   }

   endpath outpath = { printer, outputEvents }

}


}
